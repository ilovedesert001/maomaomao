{"version":3,"sources":["app/state.js","app/Util.js","app/components/Account.js","app/components/AccountList.js","app/components/SearchBox.js","app/components/AddForm.js","app/components/AppHeader.js","app/pages/Main.js","app/index.js","serviceWorker.js","index.js"],"names":["CoreStore","React","createContext","useStore","useContext","AppStore","useApp","createAdapter","configs","adapter","onNotify","payload","console","log","getInitalList","addItem","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","stop","this","removeItem","_callee2","_context2","updateItem","_callee3","_context3","AppRoute","Main","AddOrEdit","enumObject","valToKey","keys","forEach","k","_invert","BuildEnum","TOTPs","getTfaCode","secret","totp","jsotp","now","Account","observer","_ref","account","store","appStore","getLeftTime","nowSecond","getSeconds","Date","_useSetState","initialState","arguments","length","undefined","_useState","useState","_useState2","slicedToArray","state","set","patch","Function","prevState","assign","useSetState","leftTime","code","_useSetState2","setState","useEffect","timer","setInterval","window","clearInterval","copyCode","copy","progress","noTimeToDo","react_default","createElement","className","concat","onClick","IconButton","iconProps","iconName","appRoute","addForm","isEdit","remark","ProgressIndicator","percentComplete","AccountList","mainPageAccounts","map","Account_Account","key","SearchBox","SearchBox_SearchBox","placeholder","onChange","searchText","AddForm","_appStore$addForm","TextField","label","required","disabled","value","e","target","multiline","rows","PrimaryButton","text","AppHeader","CommandBar","items","farItems","name","iconOnly","fileReader","useRef","current","FileReader","onload","event","png","result","parse","err","pngData","pixelArray","data","Uint8ClampedArray","width","height","y","x","pixelData","getPixel","convertPNGtoByteArray","jsQR","AppHeader_AppHeader","Fragment","components_SearchBox_SearchBox","AccountList_AccountList","AddForm_AddForm","getAccounts","ls","saveAccounts","accounts","ss","om","buildAction","action","appConfig","test","accountList","_","findItems","_ref4","toAdd","push","_ref5","item","itemSet","Set","includes","add","toConsumableArray","observable","createStore","appss","appstore","createAppStore","initializeIcons","App","state_CoreStore","Provider","Main_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.af64822b.chunk.js","sourcesContent":["import { action, observable } from 'mobx'\nimport * as _ from 'lodash'\nimport React, { useContext } from 'react'\n\nexport const CoreStore = React.createContext(null)\nexport const useStore = () => useContext(CoreStore)\n\nexport const AppStore = React.createContext(null)\nexport const useApp = () => useContext(AppStore)\n\n\n//其他平台上，以适配器的方式相应\nexport const createAdapter = (configs) => {\n  const adapter = {}\n  adapter.onNotify = configs.onNotify || ((payload) => {\n    console.log(payload)\n  })\n\n  adapter.getInitalList = configs.getInitalList || (() => {\n    return []\n  })\n\n  adapter.addItem = configs.addItem || (async () => {\n    console.log('例如可以写进到localstorge 中')\n  })\n\n  adapter.removeItem = configs.removeItem || (async () => {\n    console.log('从localstorge 中删除')\n  })\n\n  adapter.updateItem = configs.updateItem || (async () => {\n    console.log('uuupdate')\n  })\n\n  return adapter\n\n}\n\n\n//骨架作为核心 通用\nexport const createStore = (adapter = createAdapter({})) => {\n  let om //observable model\n\n  const buildAction = (key) => {\n    om[key] = action(key, om[key])\n  }\n\n  const store = {\n    appConfig: {\n      name: 'tfa 管理器',\n      test: 'aaaa'\n    },\n    accountList: adapter.getInitalList(),\n    searchText: '',\n    get mainPageAccounts () {\n      const searchText = _.trim(om.searchText)\n      if (searchText === '') {\n        return om.accountList\n      } else {\n        return om.findItems(searchText)\n      }\n    },\n\n\n    addItem: ({secret, remark}) => {\n      const toAdd = {\n        secret,\n        remark,\n      }\n      //这里的意外情况如何传递比较科学呢\n      if (_.find(om.accountList, {secret})) {\n        adapter.onNotify(toAdd)\n      } else {\n        om.accountList.push(toAdd)\n        adapter.addItem(toAdd)\n      }\n    },\n\n    removeItem: (secret) => {\n      const toRemove =\n        _.remove(om.accountList, {secret})\n\n    },\n\n    updateItem: ({secret, remark}) => {\n      const item = _.find(om.accountList, {secret})\n      if (item) {\n        Object.assign(item, {\n          remark\n        })\n        adapter.updateItem(item)\n      }\n    },\n\n    findItems: (searchText) => {\n      const itemSet = new Set()\n      om.accountList.forEach((account) => {\n        account.secret.includes(searchText) && itemSet.add(account)\n        account.remark.includes(searchText) && itemSet.add(account)\n      })\n      return [...itemSet]\n    },\n  }\n\n  om = observable(store)\n  buildAction('addItem')\n  buildAction('removeItem')\n  buildAction('updateItem')\n\n  // store.addItem = action('addItem',store.addItem)\n\n  if (typeof window !== 'undefined') {\n    window.ss = window.store = om\n  }\n\n  return om\n}\n\n\n\n//app 自己的状态\n\nexport const BuildEnum = (enumObject) => {\n  const valToKey = {}\n  Object.keys(enumObject).forEach((k) => {\n    valToKey[enumObject[k]] = k\n  })\n  enumObject._invert = valToKey\n}\n\n//ENV\nexport const AppRoute = {\n  Main: 'Main',\n  AddOrEdit: 'AddOrEdit',\n}\n{\n  BuildEnum(AppRoute)\n}\n\nexport const createAppStore = (CoreStore) => {\n  let om //observable model\n\n  const buildAction = (key) => {\n    om[key] = action(key, om[key])\n  }\n\n  const store = {\n    appRoute:AppRoute.Main,\n    addForm: {\n      isEdit:false,//edit , create\n      secret: '',\n      remark: '',\n    },\n\n  }\n\n  om = observable(store)\n  // buildAction('addItem')\n  // buildAction('removeItem')\n  // buildAction('updateItem')\n\n  // store.addItem = action('addItem',store.addItem)\n\n  if (typeof window !== 'undefined') {\n    window.appss = window.appstore = om\n  }\n  return om\n}\n\n\n","import { useState } from 'react'\nimport * as jsotp from 'jsotp'\n\nexport const useSetState = (initialState = {}) => {\n  const [state, set] = useState(initialState)\n  const setState = (patch) => {\n    if (patch instanceof Function) {\n      set((prevState) => {\n        return Object.assign(state, patch(prevState))\n      })\n    } else {\n      Object.assign(state, patch)\n      set(state)\n    }\n  }\n  return [state, setState]\n}\n\nexport const getNow = () => {\n  return new Date()\n}\n\nconst TOTPs = {}\nexport const getTfaCode = (secret) => {\n  let totp = TOTPs[secret]\n  if (!totp) {\n    totp = jsotp.TOTP(secret)\n    TOTPs[secret] = totp\n  }\n  return totp.now()\n}\n","import { observer } from 'mobx-react-lite'\nimport { AppRoute, useApp, useStore } from '../state'\nimport React, { useEffect } from 'react'\nimport { getNow, getTfaCode, useSetState } from '../Util'\nimport getSeconds from 'date-fns/get_seconds'\nimport { IconButton, ProgressIndicator } from 'office-ui-fabric-react'\nimport * as copy from 'clipboard-copy'\n\nconst timeDelta = 30\n\nexport const Account = observer(function Account ({account}) {\n  const store = useStore()\n  const appStore = useApp()\n\n  const getLeftTime = () => {\n    let nowSecond = getSeconds(getNow())\n    if (nowSecond > timeDelta) {\n      nowSecond -= timeDelta\n    }\n    return nowSecond\n  }\n\n  const [state, setState] = useSetState({\n    leftTime: getLeftTime(),\n    code: getTfaCode(account.secret),\n  })\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setState({\n        leftTime: getLeftTime(),\n        code: getTfaCode(account.secret),\n      })\n    }, 1000)\n\n    return () => {\n      window.clearInterval(timer)\n    }\n  }, [])\n\n  const copyCode = ()=>{\n    copy(state.code)\n  }\n\n\n  const progress = state.leftTime / timeDelta\n  let noTimeToDo = false\n  if (progress > 0.88) {\n    noTimeToDo = true\n  }\n\n  return (\n    <div className={`Account ${noTimeToDo ? 'noTimeToDo' : ' '}`}>\n      <div className={'Account-panel'}>\n        <div className={'code-row'}>\n          <div\n            className={'ms-font-su ms-fontWeight-semibold tfa-code ms-fadeIn100'}\n            onClick={copyCode}\n          >\n            {state.code}\n          </div>\n          <div className={'action-btns'}>\n            <IconButton\n              iconProps={{iconName: 'Copy'}}\n              onClick={copyCode}\n            />\n            <IconButton\n              iconProps={{iconName: 'PageEdit'}}\n              onClick={() => {\n                appStore.appRoute = AppRoute.AddOrEdit\n                appStore.addForm.isEdit = true\n                appStore.addForm.secret = account.secret\n                appStore.addForm.remark = account.remark\n              }}\n            />\n\n            <IconButton\n              iconProps={{iconName: 'PageRemove'}}\n              onClick={() => {\n                store.removeItem(account.secret)\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div className={'ms-font-m'}>\n            <pre>{account.remark}</pre>\n          </div>\n        </div>\n        <ProgressIndicator percentComplete={progress}/>\n      </div>\n    </div>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport { useStore } from '../state'\nimport React from 'react'\n// import { List } from 'office-ui-fabric-react/lib/List'\n// import { FocusZone ,FocusZoneDirection} from 'office-ui-fabric-react'\nimport { Account } from './Account'\n\nexport const AccountList = observer(function AccountList () {\n  const store = useStore()\n  const {mainPageAccounts} = store\n  return (\n    <div className={'AccountList'}>\n\n      {/*<FocusZone direction={FocusZoneDirection.vertical}>*/}\n        {/*<List items={mainPageAccounts} onRenderCell={(account, index, isScrolling) => {*/}\n          {/*return <Account key={account.secret} account={account}/>*/}\n        {/*}}/>*/}\n      {/*</FocusZone>*/}\n\n\n      {mainPageAccounts.map((account) => <Account key={account.secret} account={account}/>)}\n    </div>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport { useStore } from '../state'\nimport React from 'react'\nimport { SearchBox as FabricSearchBox } from 'office-ui-fabric-react/lib/SearchBox';\n\nexport const SearchBox = observer(function SearchBox () {\n  const store = useStore()\n  return (\n    <div className={'SearchBox'}>\n      <FabricSearchBox\n        placeholder=\"Search\"\n        onChange={ (searchText) => {\n          store.searchText = searchText\n        }}\n      />\n    </div>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport { AppRoute, useApp, useStore } from '../state'\nimport React from 'react'\nimport { useSetState } from '../Util'\nimport { PrimaryButton, TextField } from 'office-ui-fabric-react'\n\nexport const AddForm = observer(function AddForm () {\n  const store = useStore()\n\n  const appStore = useApp()\n  const {secret,remark,isEdit} = appStore.addForm\n\n  // const [state,setState] = useSetState({\n  //   secret:'',\n  //   remark:'',\n  // })\n  return (\n    <div className={'AddForm'}>\n\n      <TextField\n        label=\"请输入秘钥\"\n        required={true}\n        disabled={isEdit}\n        value={secret}\n        onChange={(e)=>{\n          appStore.addForm.secret = e.target.value\n        }}\n      />\n\n\n      <TextField\n        label=\"请输入其他信息\"\n        multiline\n        rows={3}\n        value={remark}\n        onChange={(e)=>{\n          appStore.addForm.remark = e.target.value\n        }}\n      />\n\n      <div className={'addButton'}>\n        <PrimaryButton\n          text={ isEdit ? '更新':'添加'}\n          onClick={()=>{\n            if(isEdit){\n              store.updateItem(appStore.addForm)\n            } else {\n              store.addItem(appStore.addForm)\n            }\n            appStore.appRoute = AppRoute.Main\n          }}\n        />\n      </div>\n\n\n    </div>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport { AppRoute, useApp, useStore } from '../state'\nimport React from 'react'\nimport { CommandBar, PrimaryButton, TextField } from 'office-ui-fabric-react'\n\nexport const AppHeader = observer(function AppHeader () {\n  const store = useStore()\n\n  const appStore = useApp()\n\n  const getItems = () => {\n\n    if(appStore.appRoute === AppRoute.AddOrEdit){\n      return [\n        {\n          key: 'NavigateBack',\n          iconProps: {\n            iconName: 'NavigateBack',\n          },\n          onClick:()=>{\n            appStore.appRoute = AppRoute.Main\n          },\n        },\n      ]\n\n    }\n\n    return [\n      {\n        key: 'newItem',\n        // name: 'New',\n        iconProps: {\n          iconName: 'Add',\n        },\n        onClick:()=>{\n          appStore.appRoute = AppRoute.AddOrEdit\n          appStore.addForm.isEdit = false\n          appStore.addForm.secret = ''\n          appStore.addForm.remark = ''\n        },\n      },\n\n      {\n        key: 'Download',\n        iconProps: {\n          iconName: 'Download',\n        },\n        disabled:true,\n      },\n      {\n        key: 'upload',\n        iconProps: {\n          iconName: 'Upload',\n        },\n        disabled:true,\n      },\n    ]\n  }\n\n  const getFarItems = () => {\n    return [\n      {\n        key: 'info',\n        name: 'Info',\n        iconProps: {\n          iconName: 'Info',\n        },\n        iconOnly: true,\n        onClick: () => console.log('Info'),\n      },\n    ]\n  }\n\n  return (\n    <div className={'AppHeader'}>\n      <CommandBar items={getItems()} farItems={getFarItems()}/>\n    </div>\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React, { useEffect, useRef } from 'react'\nimport { AppRoute, useApp, useStore } from '../state'\nimport { AccountList } from '../components/AccountList'\nimport { SearchBox } from '../components/SearchBox'\nimport { AddForm } from '../components/AddForm'\nimport { AppHeader } from '../components/AppHeader'\nimport jsQR from 'jsqr'\nimport png from 'png.js'\n\n// Sadly png.js doesn't return an array of pixel data, so we have to construct one by iterating over and calling getPixel\nfunction convertPNGtoByteArray (pngData) {\n  const data = new Uint8ClampedArray(pngData.width * pngData.height * 4)\n  for (let y = 0; y < pngData.height; y++) {\n    for (let x = 0; x < pngData.width; x++) {\n      const pixelData = pngData.getPixel(x, y)\n\n      data[(y * pngData.width + x) * 4 + 0] = pixelData[0]\n      data[(y * pngData.width + x) * 4 + 1] = pixelData[1]\n      data[(y * pngData.width + x) * 4 + 2] = pixelData[2]\n      data[(y * pngData.width + x) * 4 + 3] = pixelData[3]\n    }\n  }\n  return data\n}\n\nexport const Main = observer(function Main () {\n  const store = useStore()\n  const appStore = useApp()\n\n\n  const fileReader = useRef(null)\n  const inputFileEl = useRef(null)\n\n  useEffect(() => {\n    fileReader.current = new FileReader()\n\n    fileReader.current.onload = function (event) {\n      const pngReader = new png(event.target.result)\n      pngReader.parse(function (err, pngData) {\n        if (err) throw err\n        const pixelArray = convertPNGtoByteArray(pngData)\n        console.log('a',jsQR(pixelArray, pngData.width, pngData.height))\n      })\n    }\n\n  }, [])\n\n  return (\n    <div className={'Main'}>\n\n      {/*<form>*/}\n        {/*<input*/}\n          {/*ref={inputFileEl}*/}\n          {/*type=\"file\"*/}\n          {/*onChange={(evt) => {*/}\n            {/*fileReader.current.readAsArrayBuffer(inputFileEl.current.files[0])*/}\n          {/*}}*/}\n        {/*/>*/}\n      {/*</form>*/}\n\n      <AppHeader/>\n      {appStore.appRoute === AppRoute.Main && (\n        <>\n          <SearchBox/>\n          <AccountList/>\n        </>\n      )}\n\n      {appStore.appRoute === AppRoute.AddOrEdit && (\n        <>\n          <AddForm/>\n        </>\n      )}\n\n\n    </div>\n  )\n})\n","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { CoreStore, AppStore, createStore, createAppStore, createAdapter } from './state'\nimport { Main } from './pages/Main'\nimport { initializeIcons } from 'office-ui-fabric-react'\nimport * as ls from 'store'\nimport * as _ from 'lodash'\n\nconst getAccounts = () => {\n  return ls.get('accounts', [])\n}\n\nconst saveAccounts = (accounts) => {\n  ls.set('accounts', accounts)\n}\n\nconst ss = createStore(createAdapter({\n\n  getInitalList: () => getAccounts(),\n\n  addItem: (item) => {\n    const accounts = getAccounts()\n    accounts.push(item)\n    saveAccounts(accounts)\n  },\n\n  updateItem: (item) => {\n    const accounts = getAccounts()\n    const account = _.find(accounts, {secret: item.secret})\n    Object.assign(account, item)\n    saveAccounts(accounts)\n  },\n\n  removeItem: (item) => {\n    const accounts = getAccounts()\n    _.remove(accounts, {secret: item.secret})\n    saveAccounts(accounts)\n  },\n\n}))\n\n// ss.addItem({secret: 'LHGKZFPXUS5ZJONQ', remark: 'aaaaaaaaaaaaaa'})\n// ss.addItem({secret: 'LHGKZFPXUS5ZJONK', remark: 'aaaaaaaabbbbb'})\n\n// for (let i = 0; i < 0; i++) {\n//   const secret = `LHGKZFPXUS5Z${i}`\n//   ss.addItem({secret, remark: secret})\n// }\n\nconst appss = createAppStore(ss)\n\ninitializeIcons()\n\nexport const App = observer(() => {\n\n  useEffect(() => {\n\n  }, [])\n\n  return (\n    <CoreStore.Provider value={ss}>\n      <AppStore.Provider value={appss}>\n        <div className={'app'}>\n          <Main/>\n        </div>\n      </AppStore.Provider>\n    </CoreStore.Provider>\n\n  )\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from './app'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n\n\n"],"sourceRoot":""}